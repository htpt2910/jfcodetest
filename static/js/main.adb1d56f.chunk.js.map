{"version":3,"sources":["components/item.jsx","components/checkboxes.jsx","App.js","index.js"],"names":["Item","props","type","defaultChecked","onChange","cityName","cityNames","useCheckboxes","map","checkbox","index","name","id","App","result","val","years","values","arr","datas","fetchData","prefCode","a","fetch","headers","then","response","json","data","status","res","console","log","filter","element","forEach","item","push","value","j","length","checkboxes","useState","prefCodes","setPrefCodes","prefCodesArray","Array","fill","checkedState","setCheckedState","useEffect","i","x","temp","elem","setData","temptemp","className","checked","position","updatedCheckedState","e","handleChange","ResponsiveContainer","width","aspect","LineChart","height","margin","top","right","left","bottom","CartesianGrid","horizontal","vertical","XAxis","dataKey","tick","YAxis","Tooltip","contentStyle","backgroundColor","color","Legend","align","verticalAlign","layout","Line","stroke","Math","floor","random","toString","activeDot","r","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adb1d56f.chunk.js","sourcesContent":["function Item( props ) {\r\n\r\n  return (\r\n    <>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            defaultChecked={false}\r\n            onChange={props.onChange}\r\n  \r\n          />\r\n          {props.cityName}\r\n        </label>\r\n      \r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Item;","const cityNames = [\r\n    \"北海道\",\r\n    \"青森県\",\r\n    \"岩手県\",\r\n    \"宮城県\",\r\n    \"秋田県\",\r\n    \"山形県\",\r\n    \"福島県\",\r\n    \"茨城県\",\r\n    \"栃木県\",\r\n    \"群馬県\",\r\n    \"埼玉県\",\r\n    \"千葉県\",\r\n    \"東京都\",\r\n    \"神奈川県\",\r\n    \"新潟県\",\r\n    \"富山県\",\r\n    \"石川県\",\r\n    \"福井県\",\r\n    \"山梨県\",\r\n    \"長野県\",\r\n    \"岐阜県\",\r\n    \"静岡県\",\r\n    \"愛知県\",\r\n    \"三重県\",\r\n    \"滋賀県\",\r\n    \"京都府\",\r\n    \"大阪府\",\r\n    \"兵庫県\",\r\n    \"奈良県\",\r\n    \"和歌山県\",\r\n    \"鳥取県\",\r\n    \"島根県\",\r\n    \"岡山県\",\r\n    \"広島県\",\r\n    \"山口県\",\r\n    \"徳島県\",\r\n    \"香川県\",\r\n    \"愛媛県\",\r\n    \"高知県\",\r\n    \"福岡県\",\r\n    \"佐賀県\",\r\n    \"長崎県\",\r\n    \"熊本県\",\r\n    \"大分県\",\r\n    \"宮崎県\",\r\n    \"鹿児島県\",\r\n    \"沖縄県\",\r\n];   \r\n\r\nfunction useCheckboxes() {\r\n    const cities = cityNames.map((checkbox, index) => ({\r\n        name: checkbox,\r\n        id: index,\r\n    }));\r\n    return cities;\r\n}\r\n\r\nexport default useCheckboxes;\r\nexport {cityNames};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-unused-vars */\nimport Item from \"./components/item\";\nimport {\n  Label,\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n  ResponsiveContainer\n} from \"recharts\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport useCheckboxes, {cityNames} from \"./components/checkboxes\";\n\n\nfunction App() {\n\n  var result, val;\n  const years = ['1970', '1980', '1990', '2000', '2010', '2020', '2030'];\n  var values = [];\n  var arr = [];\n  var datas = [];\n\n  async function fetchData(prefCode, index) {\n    return fetch( \n      `https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=${prefCode}`,\n      {\n        headers: {\n          \"x-api-key\": \"YPct0WFTK258tV2tStXrEODW5F7trpNNF0Ly8Vtq\",\n        },\n      }\n    ).then((response) =>\n      response\n        .json()\n        .then((data) => ({\n          data: data,\n          status: response.status,\n        }))\n        .then((res) => {\n          values = [];\n          val = res.data.result.data[0].data;\n          console.log(val)\n          result = val.filter((element, index) => index >= 2 && index % 2 === 0 && index <= 14);\n          result.forEach(item => values.push(item.value));\n          for(let j = 0; j < years.length; j++) {\n              arr[j][index] = values[j];\n          }\n        })\n    );\n  }\n\n  const checkboxes = useCheckboxes();\n\n  const [prefCodes, setPrefCodes] = useState([]);\n  var prefCodesArray = [];\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(checkboxes.length).fill(false)\n  );\n\n  const handleChange = (position) => {\n  \n    const updatedCheckedState = checkedState.map((item, index) => {\n      return index === position ? !item : item\n    });\n\n    setCheckedState(updatedCheckedState);\n    prefCodesArray = [];\n    var i = 0;\n    updatedCheckedState.map((item, index) => {\n      i+=1;\n      return item ? prefCodesArray[i] = index + 1 : console.log(\"nothing\")\n    }) \n    prefCodesArray = prefCodesArray.filter(e=>e);\n    \n    setPrefCodes([...prefCodesArray]);\n  }\n\n  useEffect(() => {\n    async function temptemp(){\n      for(var i=0; i < prefCodes.length; i++){\n        await fetchData(prefCodes[i], i);\n      }\n\n      console.log(arr);\n      if (arr.length > 0){\n        for (let x = 0; x < years.length; x++) {\n          let temp = {};\n          temp[\"name\"] = years[x];\n          arr[x].forEach((elem, index) => temp[cityNames[prefCodes[index] - 1]] = elem);\n          datas.push(temp);\n        }\n      }\n\n      setData([...datas])\n    }\n    temptemp();\n\n  }, [prefCodes]); \n\n  for (let i = 0; i < years.length; i++) {\n    for (let j = 0; j < prefCodes.length; j++) {\n      arr[i] = [];\n    }\n  }\n\n  const [data, setData] = useState([{}])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <p className=\"title\">1980年から現在までの地域別の人口構造図</p>\n      </header>\n      <hr />\n      <p className=\"caption\">都道府県</p>\n      <div className=\"list-city-name\">\n        <div>\n          {checkboxes.map((item, index) => {\n            return <Item className=\"item\" key={index} id={index} checked={checkedState[index]} cityName={item.name} onChange={() => {\n              handleChange(index);\n            }}/>\n          })}\n        </div>\n      </div>\n      \n      <div className=\"chart-container\">\n        <ResponsiveContainer width=\"100%\" aspect={3}>\n          <LineChart\n            width={500}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 20,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid horizontal=\"true\" vertical=\"\"  />\n            <XAxis dataKey=\"name\" tick={{ fill: '#CDF0EA' }} />\n            <YAxis type=\"number\" tick={ { fill: '#CDF0EA'}}/>\n            <Tooltip contentStyle={ {backgroundColor: '#5E8B7E', color: '#CDF0EA'}} />\n            <Legend className=\"legend\" align=\"right\" verticalAlign=\"middle\" layout=\"vertical\" />\n            \n            {prefCodes.map((prefCode) => {\n              \n              return <Line type=\"monotone\"  dataKey={cityNames[prefCode - 1]} stroke={\"#\" + Math.floor(Math.random()*16777215).toString(16)} activeDot={{ r: 8 }} />\n\n            })}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n      <h2>1980年から現在までの地域別の人口構造図</h2>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}